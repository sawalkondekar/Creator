void Transfer_Order.Transfer_Order(int rec_ID)
{
	try 
	{
		// Validatins
		//1.Item Rate Zero Validations .. 
		// 2. From Batches Item Rate Update
		//3. For Multiple batches - Average Rate
		//4.
		transfer_order_details = Transfer_Order[ID == input.rec_ID];
		// info transfer_order_details;
		mp = Map();
		// transfer_order_id // unique generated by Books
		// 	mp.put("transfer_order_number",transfer_order_details.Transfer_Number);
		mp.put("date",transfer_order_details.Date_field.toString("yyyy-MM-dd"));
		mp.put("from_warehouse_id",transfer_order_details.Source_Warehouse.Warehouse_ID);
		mp.put("to_warehouse_id",transfer_order_details.Destination_Warehouse.Warehouse_ID);
		mp.put("description",transfer_order_details.Reason);
		//
		mp.put("is_intransit_order",true);
		item_List = List();
		for each  item1 in transfer_order_details.Item_Details
		{
			mp1 = Map();
			mp1.put("item_id",item1.Item_Name.Books_Items_ID);
			// 		mp1.put("line_item_id",item1.ID);
			mp1.put("name",item1.Item_Name.Item_Name);
			mp1.put("description",item1.Add_a_description_to_your_item);
			mp1.put("quantity_transfer",item1.Transfer_Quantity);
			mp1.put("unit",item1.Item_Name.UOM);
			//
			// 			mp1.put("price",item1.Item_Rate);
			///Batches List
			batches_List = List();
			batches_List1 = List();
			fet_batch = Transfer_Order_Add_Batches[Transfer_Order = rec_ID];
			// 		add_batch_ref = Add_Batch_Reference[Batch_Reference = fet_batch.Source_Batch_Reference.Batch_Reference];
			for each  batch in fet_batch
			{
				mp2 = Map();
				// 					mp2.put("source_batch_reference",batch.Batch_Inventory_ID);		
				mp2.put("batch_in_id",batch.Source_Batch_Reference.Batch_Inventory_ID);
				// 					mp2.put("batch_in_number", batch.Batch_Inventory_ID);
				// 			mp2.put("destination_batch_reference",batch.Destination_Batch_Reference);
				// seems not mandatory
				mp2.put("out_quantity",batch.Quantity_Out);
				mp2.put("batch_in_number",batch.Destination_Batch_Reference);
				// DESTINATION BATCH REFERENCE
				batches_List.add(mp2);
			}
			mp1.put("batches",batches_List);
			item_List.add(mp1);
			mp.put("line_items",item_List);
		}
		json = Map();
		json.put("JSONString",mp);
		// 	info json;
		response = invokeurl
		[
			url :"https://www.zohoapis.in/inventory/v1/transferorders?organization_id=60022277655"
			type :POST
			parameters:json
			connection:"zohoboks"
		];
		info json;
		info response;
		//================================================================== get response details from Books ================================================================================================
		if(response.get("message") == "Transfer Order added successfully.")
		{
			// 			info "HI";
			transfer_order_response = response.get("transfer_order");
			//info transfer_order_response;
			transfer_order = transfer_order_response.get("transfer_order_number");
			//info "transfer_order" + transfer_order;
			transfer_number_custom_field = transfer_order_response.get("custom_field_hash");
			//info "CUstom Field =" + transfer_number_custom_field;
			transfer_number1 = transfer_number_custom_field.get("cf_transfer_number");
			//info "transfer_number" + transfer_number1;
			///------------------------------------------Update Transfer Order and Transfer Number from Books to Creator----------------------------------------------------------------------------------------------------------
			transfer_order_details.Transfer_Order=transfer_order;
			transfer_order_details.Transfer_Number=transfer_number1;
			transfer_order_details.Status="In Transit";
			transfer_order_details.Books_Transfer_Order_ID=transfer_order_response.get("transfer_order_id");
			//**************************************************************************** Redirect To Page ***************************************************************************************
			openUrl("#Report:Source_Transfer_Orders","same window");
			//**************************************************************** $$ FOR TRACK BATCH TRUE $$ Stock Minus In Add Batch Reference  && Add Dummyy Batch *********
			//************ Update Quantity Available
			for each  item2 in transfer_order_details.Item_Details
			{
				// if track batches true 
				if(item2.Item_Name.Track_Batches == "true")
				{
					fet_batch2 = Add_Batch_Ref_Transfer_Order[Line_Item_ID = item2.ID];
					for each  batch2 in fet_batch2
					{
						//*** Date - 6-12- comment & add in WF below - Minus Q from source & add in Dest batch warehouse Start
						// 						add_batch_ref = Add_Batch_Reference[ID == batch2.Source_Batch_Reference];
						// 						add_batch_ref.Source="TO Update";
						// 						add_batch_ref.Available_Quantity=add_batch_ref.Available_Quantity - batch2.Quantity_Out;
						// 						add_batch_ref.TO_Transferred_Qty=batch2.Quantity_Out;
						// 						// 		//******************************++++++++++++++++++++++++++++++ ADD(Insert) Source Destination Batch
						// 						add_source_batch = insert into Add_Batch_Reference
						// 						[
						// 							Batch_Reference=batch2.Destination_Batch_Reference
						// 							Manucturer_Batch=batch2.Batch_No
						// 							Manufacturer_Date_Packing_Date=batch2.Source_Batch_Reference.Manufacturer_Date_Packing_Date
						// 							Use_by_date_Expiry_Date=batch2.Source_Batch_Reference.Use_by_date_Expiry_Date
						// 							Quantity_In=batch2.Quantity_Out
						// 							Available_Quantity=batch2.Quantity_Out
						// 							Added_User=zoho.loginuser
						// 							Source="TO New"
						// 							Warehouse=transfer_order_details.Destination_Warehouse
						// 							Item_Name=item2.Item_Name
						// 							Tax_Name=batch2.Source_Batch_Reference.Tax_Name
						// 							Tax_Percentage=batch2.Source_Batch_Reference.Tax_Percentage
						// 							Item_Rate=batch2.Source_Batch_Reference.Item_Rate
						// 						];
						//*** Date - 6-12- comment & add in WF below - Minus Q from source & add in Dest batch warehouse Ends ******
						// 						Batch_Inventory_ID=batch_in_id
						// 					info add_source_batch;
						// Update Batch Invent ID Starts
						for each  line_item_to in transfer_order_response.get("line_items")
						{
							for each  batches_to in line_item_to.get("batches")
							{
								batch_in_number_id = batches_to.get("batch_in_number_id");
								// Destination Batch ID 
								// 								info batch_in_number_id;
								batch_in_number = batches_to.get("batch_in_number");
								fet_add_batch_ref = Add_Batch_Reference[Batch_Reference == batch_in_number && Warehouse == transfer_order_details.Destination_Warehouse];
								fet_add_batch_ref.Batch_Inventory_ID=batch_in_number_id;
							}
						}
						// Update Batch Invent ID Ends
					}
					// track batches true condition ends
				}
			}
			//**** Update Quantity Available And Add Destination Batch
		}
		else
		{
			sendmail
			[
				from :"system.user@cctindia.in"
				to :"sidhant.awalkondekar@cctindia.in"
				subject :"Books Error - Transfer Order"
				message :" Trasnfer Order Not been Created in Books"
			]
		}
		//**************  End Minus Add Batch Reference *****************************************************************************		
	}
	catch (e)
	{
		sendmail
		[
			from :"system.user@cctindia.in"
			to :"sidhant.awalkondekar@cctindia.in"
			subject :"Books Error - Transfer Order"
			message :e
		]
	}
	///********************************************************************************************  Transfer Order Updat Starts
	// 	if ( transfer_order_details.Status == "In Transit" ) 
	// {
	// 		transfer_order_details = Transfer_Order[ID == input.rec_ID];
	// 		// info transfer_order_details;
	// 		mp = Map();
	// 		// transfer_order_id // unique generated by Books
	// 		// 	mp.put("transfer_order_number",transfer_order_details.Transfer_Number);
	// 		mp.put("date",transfer_order_details.Date_field);
	// 		mp.put("from_warehouse_id",transfer_order_details.Source_Warehouse.Warehouse_ID);
	// 		mp.put("to_warehouse_id",transfer_order_details.Destination_Warehouse.Warehouse_ID);
	// 		mp.put("description",transfer_order_details.Reason);
	// 		//
	// 		mp.put("is_intransit_order",true);
	// 		item_List = List();
	// 		for each  item1 in transfer_order_details.Item_Details
	// 		{
	// 			mp1 = Map();
	// 			mp1.put("item_id",item1.Item_Name.Books_Items_ID);
	// 			// 		mp1.put("line_item_id",item1.ID);
	// 			mp1.put("name",item1.Item_Name.Item_Name);
	// 			mp1.put("description",item1.Add_a_description_to_your_item);
	// 			mp1.put("quantity_transfer",item1.Transfer_Quantity);
	// 			mp1.put("unit",item1.Item_Name.UOM);
	// 			//
	// 			mp1.put("price",item1.Item_Rate);
	// 			///Batches List
	// 			batches_List = List();
	// 			batches_List1 = List();
	// 			fet_batch = Add_Batch_Ref_Transfer_Order[Line_Item_ID = item1.ID];
	// 			// 		add_batch_ref = Add_Batch_Reference[Batch_Reference = fet_batch.Source_Batch_Reference.Batch_Reference];
	// 			for each  batch in fet_batch
	// 			{
	// 				mp2 = Map();
	// 				// 					mp2.put("source_batch_reference",batch.Batch_Inventory_ID);		
	// 				mp2.put("batch_in_id",batch.Batch_Inventory_ID);
	// 				// 					mp2.put("batch_in_number", batch.Batch_Inventory_ID);
	// 				// 			mp2.put("destination_batch_reference",batch.Destination_Batch_Reference);
	// 				// seems not mandatory
	// 				mp2.put("out_quantity",batch.Quantity_Out);
	// 				mp2.put("batch_in_number",batch.Destination_Batch_Reference);
	// 				// DESTINATION BATCH REFERENCE
	// 				batches_List.add(mp2);
	// 			}
	// 			mp1.put("batches",batches_List);
	// 			item_List.add(mp1);
	// 			mp.put("line_items",item_List);
	// 		}
	// 		json = Map();
	// 		json.put("JSONString",mp);
	// 		// 	info json;
	// 		response = invokeurl
	// 		[
	// 			url :"https://www.zohoapis.in/inventory/v1/transferorders?organization_id=60022277655"
	// 			type :PUT
	// 			parameters:json
	// 			connection:"zohoboks"
	// 		];
	// 		info response;
	// 		///********************************************************************************************  Transfer Order Updat Ends
	// 	}
}
