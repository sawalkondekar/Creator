void Purchase_Order.Purchase_Order_Draft(int ID1)
{
	purchase_order = Purchase_Order_PO[ID = input.ID1];
	mp = Map();
	// Main Form Fields
	mp.put("vendor_id",purchase_order.Vendor_Name.Books_Vendor_ID);
	mp.put("source_of_supply",purchase_order.Source_Of_Supply.State_Code);
	mp.put("destination_of_supply",purchase_order.Source_Of_Supply.State_Code);
	mp.put("delivery_org_address_id",purchase_order.Warehouse_Name.Warehouse_ID);
	mp.put("delivery_org_address_id",purchase_order.Warehouse_Name.Warehouse_ID);
	mp.put("reference_number",purchase_order.Reference_No);
	mp.put("date",purchase_order.Date_field);
	mp.put("payment_terms_label",purchase_order.Payment_Terms);
	mp.put("delivery_date",purchase_order.Expected_Delivery_Date);
	//delivery_date_formatted
	//expected_delivery_date
	mp.put("terms",purchase_order.Terms_Conditions);
	// Custom Fields in Main Form
	custom_fields = List();
	mp4 = Map();
	mp4.put("value",purchase_order.Delivery_Date);
	mp4.put("api_name","cf_delivery_date");
	custom_fields.add(mp4);
	mp5 = Map();
	mp5.put("value",purchase_order.Po_Type);
	mp5.put("api_name","cf_po_type");
	custom_fields.add(mp5);
	mp2 = Map();
	mp2.put("value",purchase_order.ID);
	mp2.put("api_name","cf_po_creator_id");
	custom_fields.add(mp2);
	// Delivery Time extra space at last in Books issue 
	if(purchase_order.Delivery_time == "6 am to 9 am" || purchase_order.Delivery_time == "9 am to 12 pm")
	{
		po_del_time = purchase_order.Delivery_time + " ";
	}
	else
	{
		po_del_time = purchase_order.Delivery_time;
	}
	mp3 = Map();
	mp3.put("value",po_del_time);
	mp3.put("api_name","cf_delivery_time");
	custom_fields.add(mp3);
	mp.put("custom_fields",custom_fields);
	// *** Line Items Starts
	line_items = List();
	for each  items in purchase_order.Purchase_Order_Item_Details
	{
		mp1 = Map();
		mp1.put("item_id",items.Items.Books_Items_ID);
		mp1.put("name",items.Items.Item_Name);
		mp1.put("unit",items.Items.UOM);
		mp1.put("quantity",items.Quantity);
		mp1.put("rate",items.Item_Rate);
		//mp1.put("tax_id", "1366544000000016291"); //  Based on Item and Based on Source of Supply and Destination of Supply
		mp1.put("tax_id",items.Tax.Books_Tax_ID);
	}
	line_items.add(mp1);
	// Line Items Ends ***
	mp.put("line_items",line_items);
	mp.put("status","issued");
	json = Map();
	json.put("JSONString",mp);
	po_create = invokeurl
	[
		url :"https://www.zohoapis.in/books/v3/purchaseorders?organization_id=60022277655"
		type :POST
		parameters:json
		connection:"zohoboks"
	];
	info po_create;
	if(po_create.get("message") == "Purchase Order has been added.")
	{
		purchaseorder_resp = po_create.get("purchaseorder");
		purchase_order.PO_Books_ID=purchaseorder_resp.get("purchaseorder_id");
		purchase_order.Status="Draft";
	}
}
