void Transfer_Order.Transfer_Order(int rec_ID)
{
	transfer_order_details = Transfer_Order[ID == input.rec_ID];
	// info transfer_order_details;
	mp = Map();
	// transfer_order_id // unique generated by Books
	// 	mp.put("transfer_order_number",transfer_order_details.Transfer_Number);
	mp.put("date",transfer_order_details.Date_field);
	mp.put("from_warehouse_id",transfer_order_details.Source_Warehouse.Warehouse_ID);
	mp.put("to_warehouse_id",transfer_order_details.Destination_Warehouse.Warehouse_ID);
	//
	mp.put("is_intransit_order",true);
	item_List = List();
	for each  item1 in transfer_order_details.Item_Details
	{
		mp1 = Map();
		mp1.put("item_id",item1.Item_Name.Books_Items_ID);
		// 		mp1.put("line_item_id",item1.ID);
		mp1.put("name",item1.Item_Name);
		mp1.put("description",item1.Add_a_description_to_your_item);
		mp1.put("quantity_transfer",item1.Transfer_Quantity);
		mp1.put("unit",item1.Item_Name.UOM);
		///Batches List
		batches_List = List();
		batches_List1 = List();
		fet_batch = Add_Batch_Ref_Transfer_Order[Line_Item_ID = item1.ID];
		// 		add_batch_ref = Add_Batch_Reference[Batch_Reference = fet_batch.Source_Batch_Reference.Batch_Reference];
		for each  batch in fet_batch
		{
			mp2 = Map();
			// 					mp2.put("source_batch_reference",batch.Batch_Inventory_ID);		
			mp2.put("batch_in_id",batch.Batch_Inventory_ID);
			// 					mp2.put("batch_in_number", batch.Batch_Inventory_ID);
// 			mp2.put("destination_batch_reference",batch.Destination_Batch_Reference);
			// seems not mandatory
			mp2.put("out_quantity",batch.Quantity_Out);
			mp2.put("batch_in_number",batch.Destination_Batch_Reference); // DESTINATION BATCH REFERENCE
			batches_List.add(mp2);
		}
		mp1.put("batches",batches_List);
		item_List.add(mp1);
		mp.put("line_items",item_List);
	}
	json = Map();
	json.put("JSONString",mp);
// 	info json;
	response = invokeurl
	[
		url :"https://www.zohoapis.in/inventory/v1/transferorders?organization_id=60022277655"
		type :POST
		parameters:json
		connection:"zohoboks"
	];
	info response;
}
