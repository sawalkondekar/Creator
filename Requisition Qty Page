<%{
	fetch_Line_Items_Requisition = Line_Items_Requisition[ID != 0 && Requisition.Warehouse == input.warehouse && Requisition.Date_field == input.date];
	itemQuantities = Map();
	// Map to store total quantities for each distinct item
	itemRequisitionQuantities = Map();
	// Map to store quantities for each distinct item and requisition
	distinctRequisitionNos = list();
	distinctMealTypes = list();
	distinctDates = list();
	// Iterate through the requisition records to collect distinct Requisition Nos, Meal Types, and Dates
	for each  req in fetch_Line_Items_Requisition
	{
		if(!distinctRequisitionNos.contains(req.Requisition.Requisition_No))
		{
			distinctRequisitionNos.add(req.Requisition.Requisition_No);
		}
		if(!distinctMealTypes.contains(req.Requisition.Meal_Type))
		{
			distinctMealTypes.add(req.Requisition.Meal_Type);
		}
		if(!distinctDates.contains(req.Requisition.Date_field))
		{
			distinctDates.add(req.Requisition.Date_field);
		}
		// Sum quantities for each item under each requisition
		itemName = req.Item.Item_Name;
		reqNo = req.Requisition.Requisition_No;
		// If the item-requisition combination exists, add its quantity, otherwise initialize
		if(!itemRequisitionQuantities.contains(itemName))
		{
			itemRequisitionQuantities.put(itemName,Map());
		}
		itemRequisitionMap = itemRequisitionQuantities.get(itemName);
		if(itemRequisitionMap.contains(reqNo))
		{
			itemRequisitionMap.put(reqNo,itemRequisitionMap.get(reqNo) + req.Quantity);
		}
		else
		{
			itemRequisitionMap.put(reqNo,ifnull(req.Quantity,0));
		}
		// Sum total quantities for distinct items
		if(itemQuantities.contains(itemName))
		{
			itemQuantities.put(itemName,itemQuantities.get(itemName) + req.Quantity);
		}
		else
		{
			itemQuantities.put(itemName,req.Quantity);
		}
	}
	%>
<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title></title>
</head>
<style type="text/css">
	.container{
		display: flex;
		align-items: center;
		justify-content: center;
		margin-top: 40px;
	}
	.tg  {border-collapse:collapse;border-spacing:0;}
	.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;
		overflow:hidden;padding:10px 5px;word-break:normal;}
	.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;
		font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}
	.tg .tg-7zrl{text-align:left;vertical-align:bottom;font-weight: 600}
</style>
<body>
	<div class="container">
		<table class="tg">
			<thead>
				<tr>
					<th class="tg-7zrl"></th>
					<th class="tg-7zrl"></th>
					<th class="tg-7zrl"></th>
					<th class="tg-7zrl">Requisition No.</th>
<%
	// Display distinct Requisition Nos as table headers
	for each  req_no in distinctRequisitionNos
	{
		%>
<td class="tg-7zrl"><%=req_no%></td>
<%
	}
	%>
</tr>
			</thead>
			<tbody>
				<tr style="background-color: #ededed;">
					<td class="tg-7zrl"></td>
					<td class="tg-7zrl"></td>
					<td class="tg-7zrl">Summary</td>
					<td class="tg-7zrl">Meal Type</td>
<%
	// Display distinct Meal Types as table headers
	for each  meal in distinctRequisitionNos
	{
		req_1 = Requisition[Requisition_No = meal];
		%>
<td class="tg-7zrl"><%=req_1.Meal_Type%></td>
<%
	}
	%>
</tr>
				<tr style="background-color: #ededed;">
					<td class="tg-7zrl">Serial No.</td>
					<td class="tg-7zrl">Warehouse</td>
					<td class="tg-7zrl">Item Name</td>
					<td class="tg-7zrl">Total Quantity</td>
<%
	// Display distinct Dates as table headers
	for each  date in distinctDates
	{
		%>
<th class="tg-7zrl"><%=input.date%></th>
<%
	}
	%>
</tr>
<%
	serialNumber = 1;
	// Now display the distinct items with their total quantities
	for each  item in itemQuantities.keys()
	{
		// Get the first matching record for the item to pull Warehouse details
		firstRec = null;
		for each  rec in fetch_Line_Items_Requisition
		{
			if(rec.Item.Item_Name == item)
			{
				firstRec = rec;
				//break; // We found the first matching record
			}
		}
		if(firstRec != null)
		{
			%>
<tr>
							<td class="tg-7zrl"><%=serialNumber%></td> <!-- Serial No. -->
							<td class="tg-7zrl"><%=firstRec.Requisition.Warehouse.Warehouse_Name%></td> <!-- Warehouse -->
							<td class="tg-7zrl"><%=firstRec.Item.Item_Name%></td> <!-- Display distinct item name -->
							<td class="tg-7zrl"><%=itemQuantities.get(item)%></td> <!-- Total Quantity -->

							<!-- Display Quantity under each Requisition No -->
<%
			for each  req_no in distinctRequisitionNos
			{
				itemRequisitionMap = itemRequisitionQuantities.get(item);
				// Display quantity for the current requisition if it exists, otherwise display '-'
				if(itemRequisitionMap.contains(req_no))
				{
					%>
<td class="tg-7zrl"><%=itemRequisitionMap.get(req_no)%></td>
<%
				}
				else
				{
					%>
<td class="tg-7zrl">-</td>
<%
				}
			}
			%>
</tr>
<%
			serialNumber = serialNumber + 1;
		}
	}
	%>
</tbody>
		</table>
	</div>
</body>
</html>
<%

}%>
